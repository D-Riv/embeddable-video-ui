{"version":3,"sources":["core.config.js","core.utils.js","components/Paper1.js","components/Home.js","components/Paper2.js","components/Header.js","App.js","index.js"],"names":["DEFAULT","API","httpRequest","apiConfig","method","endpoint","headers","data","params","Promise","resolve","reject","axios","url","then","res","err","response","Paper1","paper1Src","session1","useContext","SessionUrl","useState","activeConferences","setActiveConferences","fetchActiveConferences","useCallback","a","status","active_conferences","console","log","error","useEffect","urlArr","forEach","item","push","embed_room_url","script","document","createElement","src","async","setAttribute","getElementById","appendChild","id","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","form","padding","display","flexDirection","formButton","margin","width","tableContainer","justifyContent","tableData","Home","classes","setInactiveConferences","name","room_type","permanentRoom","accessType","conferenceData","setConferenceData","setSessionUrl","fetchInactiveConferences","addNewConferences","permanent_room","access_type","deleteConference","handleFormSubmit","e","target","value","paper","className","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","map","room_url","patient_firstname","noValidate","autoComplete","TextField","label","variant","helperText","onChange","onClick","Paper2","flexGrow","menuButton","marginRight","spacing","title","appBar","alignItems","PageHeader","AppBar","position","Toolbar","to","style","textDecoration","Typography","createContext","App","session2","session3","session4","session5","session6","sessions","Provider","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.557ae575.chunk.js","sourcesContent":["export const DEFAULT = {\n  BASE_URL: \"https://api.clickmeeting.com/v1/\",\n  AUTH_TOKEN: \"us776cdf9305abfe73f83fb04f15a17d6ceef16cd9\",\n};\n\nexport const API = {\n  GET_CONFERENCES: \"conferences/\",\n};\n","import axios from \"axios\";\n// import _get from \"lodash/get\";\nimport { DEFAULT } from \"./core.config\";\n\nexport const httpRequest = (\n  apiConfig = {\n    method: \"get\",\n    endpoint: null,\n    headers: {},\n    data: null,\n    params: {},\n  }\n) =>\n  new Promise((resolve, reject) => {\n    const headers = {\n      \"content-type\": \"application/json\",\n      \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n      // Authorization: DEFAULT.AUTH_TOKEN,\n      // ...apiConfig.headers,\n    };\n\n    axios({\n      method: apiConfig.method,\n      url: DEFAULT.BASE_URL + apiConfig.endpoint,\n      headers,\n      data: apiConfig.data,\n      params: apiConfig.params,\n    }).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) => {\n        reject(err.response);\n      }\n    );\n  });\n","import React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\nimport { SessionUrl } from \"../App\";\nimport PropTypes from \"prop-types\";\n\nimport { httpRequest } from \"../core.utils\";\nimport { API, DEFAULT } from \"../core.config\";\nimport Iframe from \"./Iframe\";\n\nconst Paper1 = ({ paper1Src }) => {\n  const { session1 } = useContext(SessionUrl);\n\n  const [activeConferences, setActiveConferences] = useState([]);\n\n  const fetchActiveConferences = useCallback(async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {\n        //   data: {\n        //     facility_id: 9804,\n        //   },\n        // },\n        params: {\n          status: \"active\",\n        },\n      });\n      setActiveConferences(response.data.active_conferences);\n      console.log(response.data.active_conferences);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchActiveConferences();\n  }, [fetchActiveConferences]);\n\n  const urlArr = [];\n  activeConferences.forEach((item) => {\n    // console.log(item.embed_room_url);\n    urlArr.push(item.embed_room_url);\n  });\n  console.log(urlArr);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n\n    // script.src =\n    //   \"https://embed.clickmeeting.com/embed_conference.html?r=1716023574856678\";\n    script.src = urlArr[0];\n    script.async = true;\n    script.setAttribute(\"type\", \"text/javascript\");\n\n    document.getElementById(\"divtag\").appendChild(script);\n\n    // return () => {\n    //   document.getElementById(\"divtag\").removeChild(script);\n    // };\n  }, [session1, urlArr]);\n\n  return (\n    <div id=\"divtag\">\n      {/* <Iframe /> */}\n      {/* <iframe\n        title=\"Click Meeting\"\n        width=\"300\"\n        height=\"500\"\n        allow=\"microphone\"\n        srcDoc=\"https://embed.clickmeeting.com/embed_conference.html?r=1716023574842252\"\n      ></iframe> */}\n    </div>\n  );\n};\n\nPaper1.propTypes = {\n  paper1Src: PropTypes.object,\n};\n\nexport default Paper1;\n","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport { httpRequest } from \"../core.utils\";\nimport { API, DEFAULT } from \"../core.config\";\nimport { withStyles, makeStyles, fade } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Paper1 from \"./Paper1\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#000000\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    padding: \"2rem 5rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formButton: {\n    margin: \"2rem\",\n    color: \"#ffffff\",\n    backgroundColor: \"#000000\",\n    width: \"5rem\",\n  },\n  tableContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  tableData: {\n    width: \"60rem\",\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  const [activeConferences, setActiveConferences] = useState([]);\n  const [inactiveConferences, setInactiveConferences] = useState([]);\n  const [conferenceData, setConferenceData] = useState({\n    name: \"\",\n    room_type: \"\",\n    permanentRoom: true,\n    accessType: 1,\n    id: null,\n  });\n  const [sessionUrl, setSessionUrl] = useState(\"\");\n\n  const fetchActiveConferences = useCallback(async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {\n        //   data: {\n        //     facility_id: 9804,\n        //   },\n        // },\n        params: {\n          status: \"active\",\n        },\n      });\n      setActiveConferences(response.data.active_conferences);\n      console.log(response.data.active_conferences);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  }, []);\n\n  const fetchInactiveConferences = useCallback(async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {\n        //   data: {\n        //     facility_id: 9804,\n        //   },\n        // },\n        params: {\n          status: \"inactive\",\n        },\n      });\n      setInactiveConferences(response.data.active_conferences);\n      // console.log(response.data.active_conferences);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchActiveConferences();\n    fetchInactiveConferences();\n  }, [conferenceData, fetchActiveConferences, fetchInactiveConferences]);\n\n  const addNewConferences = async (item) => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"POST\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {},\n        params: {\n          name: conferenceData.name,\n          room_type: conferenceData.room_type,\n          // permanent_room: conferenceData.permanentRoom,\n          permanent_room: \"true\",\n          access_type: 1,\n\n          // access_type: conferenceData.accessType,\n          // name: item,\n          // room_type: \"meeting\",\n          // permanent_room: \"true\",\n          // access_type: 1,\n        },\n      });\n      fetchActiveConferences();\n\n      // window.location.reload();\n      // setInactiveConferences(response.data.active_conferences);\n      // console.log(response.data.room.embed_room_url);\n      // setUrl(response.data.room.embed_room_url);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  };\n\n  const addbatch = () => {\n    setConferenceData({\n      name: \"\",\n      room_type: \"\",\n    });\n    const sessionArr = [\"session1\", \"session2\", \"session3\", \"session4\"];\n\n    sessionArr.forEach((item) => {\n      addNewConferences(item);\n    });\n  };\n\n  const deleteConference = async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: `${API.GET_CONFERENCES}/${conferenceData.id}`,\n        method: \"DELETE\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {},\n        // params: {\n        //   room_id: 4904249,\n        // },\n      });\n      console.log(response.data);\n      fetchActiveConferences();\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // console.log(e.target.name);\n\n    setConferenceData({\n      ...conferenceData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    activeConferences.forEach((item) => {\n      if (\n        conferenceData.paper === \"Session1\" &&\n        conferenceData.name === item.name\n      ) {\n        setSessionUrl(item.embed_room_url);\n      }\n    });\n  }, [activeConferences, conferenceData]);\n  // console.log(conferenceData.session);\n  // console.log(activeConferences[0].data.embed_room_url);\n\n  return (\n    <div>\n      <h1>View Active Sessions</h1>\n\n      <div className={classes.tableContainer}>\n        <TableContainer component={Paper} className={classes.tableData}>\n          <Table aria-label=\"customized table\" className={classes.tableData}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align=\"center\">Status</StyledTableCell>\n                <StyledTableCell align=\"center\">Id</StyledTableCell>\n                <StyledTableCell align=\"center\">Name</StyledTableCell>\n                <StyledTableCell align=\"center\">Room Url</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {activeConferences.map((item) => {\n                return (\n                  <StyledTableRow key={item.patient_firstname}>\n                    <StyledTableCell align=\"center\" className=\"cell-msg\">\n                      {item.status}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\" className=\"cell-msg\">\n                      {item.id}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\" className=\"cell-msg\">\n                      {item.name}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\" className=\"cell-msg\">\n                      {item.room_url}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n\n      {/* <h1>View InActive Meetings</h1>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align=\"center\">Status</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {inactiveConferences.map((item) => {\n                return (\n                  <StyledTableRow key={item.patient_firstname}>\n                    <StyledTableCell align=\"center\" className=\"cell-msg\">\n                      {item.status}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer> */}\n      <Paper>\n        <form noValidate autoComplete=\"off\" className={classes.form}>\n          <h1>Add new meeting session</h1>\n          <TextField\n            id=\"1\"\n            label=\"Room name\"\n            variant=\"outlined\"\n            helperText=\"name of the room that will be visible to attendees. \"\n            name=\"name\"\n            onChange={handleFormSubmit}\n          />\n          <TextField\n            id=\"2\"\n            label=\"Room type\"\n            variant=\"outlined\"\n            helperText=\"meeting or webinar\"\n            name=\"room_type\"\n            onChange={handleFormSubmit}\n          />\n          {/* <TextField\n              id=\"3\"\n              label=\"Permanent room\"\n              variant=\"outlined\"\n              helperText=\"this value determines whether you create a one-time scheduled meeting or a permanent (endless) conference room.\n                          false\tone-time scheduled meeting.\n                          true\tpermanent event.\"\n              name=\"permanentRoom\"\n              onChange={handleFormSubmit}\n            /> */}\n          {/* <TextField\n              id=\"4\"\n              label=\"Access type\"\n              variant=\"outlined\"\n              helperText=\"\n                        1\tdescribes open access room, not protected by password or token. \n                        2\tpassword protected, access to the conference room granted based on password provided in advance.\n                        3\ttoken protected, each invitee receives a unique token that grants access to the conference room. Access token is single-use, so it can be used only once by one person.\"\n              name=\"accessType\"\n              onChange={handleFormSubmit}\n            /> */}\n          {/* <TextField\n            id=\"5\"\n            label=\"Session\"\n            variant=\"outlined\"\n            helperText=\"Post to Session1 or Session2\"\n            name=\"Paper\"\n            onChange={handleFormSubmit}\n          /> */}\n        </form>\n        <div>\n          <button onClick={addNewConferences} className={classes.formButton}>\n            Add single meeting session\n          </button>\n          <button onClick={addbatch} className={classes.formButton}>\n            Batch create meeting sessions\n          </button>\n        </div>\n        <form noValidate autoComplete=\"off\" className={classes.form}>\n          <h1>Delete meeting</h1>\n          <TextField\n            id=\"6\"\n            label=\"Room Id\"\n            variant=\"outlined\"\n            helperText=\"Room Id\"\n            name=\"id\"\n            onChange={handleFormSubmit}\n          />\n        </form>\n        <div>\n          <button onClick={deleteConference} className={classes.formButton}>\n            Delete meeting\n          </button>\n        </div>\n      </Paper>\n      {/* <Paper1 paper1Src={sessionUrl} /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\nimport Iframe from \"./Iframe\";\n\nimport { httpRequest } from \"../core.utils\";\nimport { API, DEFAULT } from \"../core.config\";\n\nconst Paper2 = () => {\n  const [activeConferences, setActiveConferences] = useState([]);\n\n  const fetchActiveConferences = useCallback(async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {\n        //   data: {\n        //     facility_id: 9804,\n        //   },\n        // },\n        params: {\n          status: \"active\",\n        },\n      });\n      setActiveConferences(response.data.active_conferences);\n      console.log(response.data.active_conferences);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchActiveConferences();\n  }, [fetchActiveConferences]);\n\n  const urlArr = [];\n  activeConferences.forEach((item) => {\n    // console.log(item.embed_room_url);\n    urlArr.push(item.embed_room_url);\n  });\n  console.log(urlArr);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n\n    // script.src =\n    //   \"https://embed.clickmeeting.com/embed_conference.html?r=1716023574856744\";\n    script.src = urlArr[1];\n\n    script.async = true;\n    script.setAttribute(\"type\", \"text/javascript\");\n\n    document.getElementById(\"divtag2\").appendChild(script);\n\n    // return () => {\n    //   document.getElementById(\"divtag\").removeChild(script);\n    // };\n  }, [urlArr]);\n\n  return (\n    <div id=\"divtag2\">\n      {/* <Iframe /> */}\n      {/* <iframe\n        title=\"Click Meeting\"\n        width=\"300\"\n        height=\"500\"\n        allow=\"microphone\"\n        srcDoc=\"https://embed.clickmeeting.com/embed_conference.html?r=1716023574842252\"\n      ></iframe> */}\n    </div>\n  );\n};\n\nexport default Paper2;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: \"#fff\",\n    margin: \"0 1rem 0 1rem\",\n  },\n  appBar: {\n    alignItems: \"center\",\n  },\n}));\n\nexport default function PageHeader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar>\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Home\n            </Typography>\n          </Link>\n          <Link to=\"/paper1\" style={{ textDecoration: \"none\" }}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Session1\n            </Typography>\n          </Link>\n          <Link to=\"/paper2\" style={{ textDecoration: \"none\" }}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Session2\n            </Typography>\n          </Link>\n\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, createContext, useCallback, useEffect } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Paper1 from \"./components/Paper1\";\nimport Paper2 from \"./components/Paper2\";\nimport PageHeader from \"./components/Header\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { httpRequest } from \"./core.utils\";\nimport { API, DEFAULT } from \"./core.config\";\n\nexport const SessionUrl = createContext();\n\nfunction App() {\n  const [conferenceData, setConferenceData] = useState([]);\n  const [sessions, setSessions] = useState({\n    session1: [0].embed_room_url,\n    session2: [1].embed_room_url,\n    session3: [2].embed_room_url,\n    session4: [3].embed_room_url,\n    session5: [4].embed_room_url,\n    session6: [5].embed_room_url,\n  });\n  const fetchActiveConferences = useCallback(async () => {\n    try {\n      const response = await httpRequest({\n        endpoint: API.GET_CONFERENCES,\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n        },\n        // data: {\n        //   data: {\n        //     facility_id: 9804,\n        //   },\n        // },\n        params: {\n          status: \"active\",\n        },\n      });\n      setConferenceData(response.data.active_conferences);\n      console.log(response.data.active_conferences);\n    } catch (err) {\n      console.error(\"API Call Failed: \", err);\n    }\n  }, []);\n\n  // const fetchInactiveConferences = useCallback(async () => {\n  //   try {\n  //     const response = await httpRequest({\n  //       endpoint: API.GET_CONFERENCES,\n  //       method: \"GET\",\n  //       headers: {\n  //         \"X-Api-Key\": DEFAULT.AUTH_TOKEN,\n  //       },\n  //       // data: {\n  //       //   data: {\n  //       //     facility_id: 9804,\n  //       //   },\n  //       // },\n  //       params: {\n  //         status: \"inactive\",\n  //       },\n  //     });\n  //     setInactiveConferences(response.data.active_conferences);\n  //     // console.log(response.data.active_conferences);\n  //   } catch (err) {\n  //     console.error(\"API Call Failed: \", err);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    fetchActiveConferences();\n    // fetchInactiveConferences();\n  }, [fetchActiveConferences]);\n\n  console.log(conferenceData[0]);\n\n  conferenceData.forEach((item) => {});\n\n  return (\n    <div className=\"App\">\n      <SessionUrl.Provider value={sessions}>\n        <Router>\n          <PageHeader />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/paper1\" component={Paper1} />\n            <Route exact path=\"/paper2\" component={Paper2} />\n          </Switch>\n        </Router>\n      </SessionUrl.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}